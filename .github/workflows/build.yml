name: Build TulipHook

on:
  workflow_dispatch:
  push:
    branches:
    - '**'              # every branch
    - '!no-build-**'    # unless marked as no-build

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        config:
        - name: "Windows"
          os_identifier: "win"
          os: windows-2022
          # prefixes: ''
          extra_flags: '-DCMAKE_C_COMPILER=ccache -DCMAKE_CXX_COMPILER=ccache -T host=x86 -A win32'
          out_paths: './build/src/Debug/libTulipHook.lib ./build/Debug/test/TulipHookTest'
          cli_cmd: ''

        - name: "macOS"
          os_identifier: "mac"
          os: macos-latest
          # prefixes: 'PATH="/usr/local/opt/ccache/libexec:$PATH"'
          extra_flags: "-DCMAKE_C_COMPILER=ccache -DCMAKE_CXX_COMPILER=ccache -DCMAKE_BUILD_TYPE=Debug"
          out_paths: './build/src/libTulipHook.a ./build/test/TulipHookTest'
          cli_cmd: 'chmod +x $GITHUB_WORKSPACE/cli/geode'
          
    name: ${{ matrix.config.name }}
    runs-on: ${{ matrix.config.os }}

    steps:
    - uses: actions/checkout@v2
      with:
        submodules: recursive

    - uses: ilammy/msvc-dev-cmd@v1
      with:
        arch: x86
      if: matrix.config.os_identifier == 'win'

    - name: Configure ccache
      uses: hendrikmuhs/ccache-action@v1.2
      with:
        key: ${{ matrix.config.os }}

    - name: Configure CMake
      shell: bash
      run: >
        ${{ matrix.config.prefixes }} cmake -B 
        ${{ github.workspace }}/build 
        ${{ matrix.config.extra_flags }}

    - name: Build
      shell: bash
      run: |
        cd build
        cmake --build . --config Debug --parallel

    - name: Move to output folder
      shell: bash
      working-directory: ${{ github.workspace }}
      run: |
        mkdir ./out
        mv ${{ matrix.config.out_paths }} ./out
    
    - name: Upload Artifacts
      uses: actions/upload-artifact@v2
      with:
        name: output
        path: ${{ github.workspace }}/out

